#!/bin/bash
###############################################################################
# Convenience Wrapper for the victims cli 
###############################################################################

# default settings
VICTIMS_SERVICE_URI="http://www.victi.ms"
VICTIMS_SERVICE_ENTRY="service/"
VICTIMS_ENCODING="UTF-8"
VICTIMS_HOME="${HOME}/.victims"
VICTIMS_CACHE_PURGE="false"
VICTIMS_ALGORITHMS="MD5,SHA1,SHA512"
VICTIMS_DB_DRIVER="org.h2.Driver"
VICTIMS_DB_URL="jdbc:${VICTIMS_HOME}/victims;MVCC=true"
VICTIMS_DB_USER="victims"
VICTIMS_DB_PASS="victims"
VICTIMS_DB_PURGE="false"

# victims client version 
VICTIMS_CLIENT_VERSION="1.0-SNAPSHOT"

# standalone jar file
VICTIMS_JAR="victims-client-${VICTIMS_CLIENT_VERSION}-standalone.jar"

# base command
VICTIMS_CMD="java -jar ${VICTIMS_HOME}/bin/${VICTIMS_JAR}"

debug_env(){
    echo "VICTIMS_CLIENT_VERSION = ${VICTIMS_CLIENT_VERSION}"
    echo "VICTIMS_JAR = ${VICTIMS_JAR}"
    echo "VICTIMS_CMD = ${VICTIMS_CMD}"
    echo "VICTIMS_SERVICE_URI = ${VICTIMS_SERVICE_URI}"
    echo "VICTIMS_SERVICE_ENTRY = ${VICTIMS_SERVICE_ENTRY}"
    echo "VICTIMS_ENCODING = ${VICTIMS_ENCODING}"
    echo "VICTIMS_HOME = ${VICTIMS_HOME}"
    echo "VICTIMS_CACHE_PURGE = ${VICTIMS_CACHE_PURGE}"
    echo "VICTIMS_ALGORITHMS = ${VICTIMS_ALGORITHMS}"
    echo "VICTIMS_DB_DRIVER = ${VICTIMS_DB_DRIVER}"
    echo "VICTIMS_DB_URL = ${VICTIMS_DB_URL}"
    echo "VICTIMS_DB_USER = ${VICTIMS_DB_USER}"
    echo "VICTIMS_DB_PASS = ${VICTIMS_DB_PASS}"
    echo "VICTIMS_DB_PURGE = ${VICTIMS_DB_PURGE}"
}

# ensure that everything is setup correctly 
checkenv(){
    jvm=which java
    if [ -n "${jvm+x}" ]; then
        echo "Java is required to run victims client"
        exit 1
    fi
    
    if [ -n "${VICTIMS_HOME+x}" ]; then 
        echo "VICTIMS_HOME environment variable not set"
        exit 1
    fi

    if [ ! -e "${VICTIMS_HOME}/${VICTIMS_JAR}" ]; then
        echo "${VICTIMS_HOME}/${VICTIMS_JAR} not found"
        exit 1
    fi
}

#scan(){
#    runner "scan" "$@"
#}

#update(){
#    last_update="$(${VICTIMS_CMD} last-update)"
#    if [ -n "${last_update+x}" ]; then
#        last_update="1970-01-01T00:00:00" 
#    fi
#    echo "Checking for updates. Last updated ${last_update}"
#    runner "sync"
#}

runner(){
    ${VICTIMS_CMD} <<EOF
config set victims.service.uri "${VICTIMS_SERVICE_URI}"
config set victims.service.entry "${VICTIMS_SERVICE_ENTRY}"
config set victims.encoding "${VICTIMS_ENCODING}"
config set victims.home "${VICTIMS_HOME}"
config set victims.cache.purge "${VICTIMS_CACHE_PURGE}"
config set victims.algorithms "${VICTIMS_ALGORITHMS}"
config set victims.db.driver "${VICTIMS_DRIVER}"
config set victims.db.url "${VICTIMS_DB_URL}"
config set victims.db.user "${VICTIMS_DB_USER}"
config set victims.db.pass "${VICTIMS_DB_PASS}"
config set victims.db.purge "${VICTIMS_DB_PURGE}"
$@
EOF

}

usage(){
    echo "warning - Use at your own risk"
}

main(){
    if [ -n "${VICTIMS_DEBUG+x}" ]; then 
        debug_env
    fi
    # TODO Use getopt to accept multiple command line options
    # e.g. ./victims --sync --home=/tmp/victims *.jar
    runner "$@"
}

main "$@"

